// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using System;

namespace BrainWorks.ATM.Persistence.Migrations
{
	[DbContext(typeof(ATMContext))]
	partial class ATMContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "3.1.8")
				.HasAnnotation("Relational:MaxIdentifierLength", 128)
				.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

			modelBuilder.Entity("BrainWorks.ATM.Data.Account", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("AccountNumber")
						.IsRequired()
						.HasColumnType("varchar(20)");

					b.Property<int>("AccountTypeId")
						.HasColumnType("int");

					b.Property<decimal>("AvailableBalance")
						.HasColumnType("decimal(10,2)");

					b.Property<string>("CustomerNumber")
						.IsRequired()
						.HasColumnType("varchar(20)");

					b.Property<int>("StatusId")
						.HasColumnType("int");

					b.Property<int>("UserId")
						.HasColumnType("int");

					b.HasKey("Id");

					b.HasIndex("AccountTypeId");

					b.HasIndex("StatusId");

					b.HasIndex("UserId");

					b.ToTable("Accounts");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.AccountType", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.HasKey("Id");

					b.ToTable("AccountTypes");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.Card", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<int>("AccountId")
						.HasColumnType("int");

					b.Property<int>("CVV")
						.HasColumnType("int");

					b.Property<string>("CardName")
						.IsRequired()
						.HasColumnType("varchar(100)");

					b.Property<string>("CardNumber")
						.IsRequired()
						.HasColumnType("varchar(20)");

					b.Property<int>("ExpiryMonth")
						.HasColumnType("int");

					b.Property<int>("ExpiryYear")
						.HasColumnType("int");

					b.Property<int>("PIN")
						.HasColumnType("int");

					b.Property<int>("StatusId")
						.HasColumnType("int");

					b.HasKey("Id");

					b.HasIndex("AccountId");

					b.HasIndex("StatusId");

					b.ToTable("Card");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.DepositMode", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.HasKey("Id");

					b.ToTable("DepositModes");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.SiteContent", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("Key")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.Property<string>("Reference")
						.IsRequired()
						.HasColumnType("varchar(100)");

					b.Property<string>("Value")
						.IsRequired()
						.HasColumnType("varchar(500)");

					b.HasKey("Id");

					b.ToTable("SiteContents");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.Status", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.HasKey("Id");

					b.ToTable("Status");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.Transaction", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<decimal>("Amount")
						.HasColumnType("decimal(10,2)");

					b.Property<int>("DepositModeId")
						.HasColumnType("int");

					b.Property<int>("StatusId")
						.HasColumnType("int");

					b.Property<DateTime>("TransactionDate")
						.ValueGeneratedOnAdd()
						.HasColumnType("datetime2")
						.HasDefaultValueSql("getdate()");

					b.Property<string>("TransactionNumber")
						.IsRequired()
						.HasColumnType("varchar(20)");

					b.Property<int>("TransactionTypeId")
						.HasColumnType("int");

					b.HasKey("Id");

					b.HasIndex("DepositModeId");

					b.HasIndex("StatusId");

					b.HasIndex("TransactionTypeId");

					b.ToTable("Transactions");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.TransactionType", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.Property<string>("ShortCode")
						.IsRequired()
						.HasColumnType("varchar(10)");

					b.HasKey("Id");

					b.ToTable("TransactionTypes");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.User", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int")
						.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

					b.Property<string>("Address1")
						.IsRequired()
						.HasColumnType("varchar(500)");

					b.Property<string>("Address2")
						.HasColumnType("varchar(500)");

					b.Property<string>("City")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.Property<string>("Email")
						.IsRequired()
						.HasColumnType("varchar(200)");

					b.Property<string>("FirstName")
						.IsRequired()
						.HasColumnType("varchar(200)");

					b.Property<string>("Landmark")
						.HasColumnType("varchar(100)");

					b.Property<string>("LastName")
						.IsRequired()
						.HasColumnType("varchar(200)");

					b.Property<string>("Mobile")
						.IsRequired()
						.HasColumnType("varchar(20)");

					b.Property<string>("Pin")
						.IsRequired()
						.HasColumnType("varchar(6)");

					b.Property<string>("State")
						.IsRequired()
						.HasColumnType("varchar(50)");

					b.Property<int>("StatusId")
						.HasColumnType("int");

					b.HasKey("Id");

					b.HasIndex("StatusId");

					b.ToTable("Users");
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.Account", b =>
				{
					b.HasOne("BrainWorks.ATM.Data.AccountType", "AccountType")
						.WithMany("Accounts")
						.HasForeignKey("AccountTypeId")
						.OnDelete(DeleteBehavior.NoAction)
						.IsRequired();

					b.HasOne("BrainWorks.ATM.Data.Status", "Status")
						.WithMany("Accounts")
						.HasForeignKey("StatusId")
						.OnDelete(DeleteBehavior.NoAction)
						.IsRequired();

					b.HasOne("BrainWorks.ATM.Data.User", "User")
						.WithMany("Accounts")
						.HasForeignKey("UserId")
						.OnDelete(DeleteBehavior.NoAction)
						.IsRequired();
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.Card", b =>
				{
					b.HasOne("BrainWorks.ATM.Data.Account", "Account")
						.WithMany("Cards")
						.HasForeignKey("AccountId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.HasOne("BrainWorks.ATM.Data.Status", "Status")
						.WithMany("Cards")
						.HasForeignKey("StatusId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.Transaction", b =>
				{
					b.HasOne("BrainWorks.ATM.Data.DepositMode", "DepositMode")
						.WithMany("Transactions")
						.HasForeignKey("DepositModeId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.HasOne("BrainWorks.ATM.Data.Status", "Status")
						.WithMany("Transactions")
						.HasForeignKey("StatusId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.HasOne("BrainWorks.ATM.Data.TransactionType", "TransactionType")
						.WithMany("Transactions")
						.HasForeignKey("TransactionTypeId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();
				});

			modelBuilder.Entity("BrainWorks.ATM.Data.User", b =>
				{
					b.HasOne("BrainWorks.ATM.Data.Status", "Status")
						.WithMany("Users")
						.HasForeignKey("StatusId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();
				});
#pragma warning restore 612, 618
		}
	}
}
